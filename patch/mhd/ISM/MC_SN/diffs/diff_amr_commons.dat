module amr_commons						module amr_commons
  use amr_parameters						  use amr_parameters

  logical::output_done=.false.                  ! Output just	  logical::output_done=.false.                  ! Output just
  logical::init=.false.                         ! Set up or r	  logical::init=.false.                         ! Set up or r
  logical::balance=.false.                      ! Load balanc	  logical::balance=.false.                      ! Load balanc
  logical::shrink=.false.                       ! Shrink mesh	  logical::shrink=.false.                       ! Shrink mesh
  integer::nstep=0                              ! Time step	  integer::nstep=0                              ! Time step
  integer::nstep_coarse=0                       ! Coarse step	  integer::nstep_coarse=0                       ! Coarse step
  integer::nstep_coarse_old=0                   ! Old coarse 	  integer::nstep_coarse_old=0                   ! Old coarse 
  integer::nflag,ncreate,nkill                  ! Refinements	  integer::nflag,ncreate,nkill                  ! Refinements
  integer::ncoarse                              ! nx.ny.nz	  integer::ncoarse                              ! nx.ny.nz
  integer::ngrid_current                        ! Actual numb	  integer::ngrid_current                        ! Actual numb

  real(dp)::emag_tot=0.0D0                      ! Total magne	  real(dp)::emag_tot=0.0D0                      ! Total magne
  real(dp)::ekin_tot=0.0D0                      ! Total kinet	  real(dp)::ekin_tot=0.0D0                      ! Total kinet
  real(dp)::eint_tot=0.0D0                      ! Total inter	  real(dp)::eint_tot=0.0D0                      ! Total inter
  real(dp)::epot_tot=0.0D0                      ! Total poten	  real(dp)::epot_tot=0.0D0                      ! Total poten
  real(dp)::epot_tot_old=0.0D0                  ! Old potenti	  real(dp)::epot_tot_old=0.0D0                  ! Old potenti
  real(dp)::epot_tot_int=0.0D0                  ! Time integr	  real(dp)::epot_tot_int=0.0D0                  ! Time integr
  real(dp)::const=0.0D0                         ! Energy cons	  real(dp)::const=0.0D0                         ! Energy cons
  real(dp)::aexp_old=1.0D0                      ! Old expansi	  real(dp)::aexp_old=1.0D0                      ! Old expansi
  real(dp)::rho_tot=0.0D0                       ! Mean densit	  real(dp)::rho_tot=0.0D0                       ! Mean densit
  real(dp)::t=0.0D0                             ! Time variab	  real(dp)::t=0.0D0                             ! Time variab

  ! MPI variables						  ! MPI variables
!  integer::ncpu,ndomain,myid,overload=1		      |	  integer::ncpu,ndomain,myid,overload=1
  integer::ncpu,ndomain,overload=1			      <

  ! Friedman model variables					  ! Friedman model variables
  integer::n_frw						  integer::n_frw
  real(dp),allocatable,dimension(:)::aexp_frw,hexp_frw,tau_fr	  real(dp),allocatable,dimension(:)::aexp_frw,hexp_frw,tau_fr

  ! Initial conditions parameters from grafic			  ! Initial conditions parameters from grafic
  integer                  ::nlevelmax_part			  integer                  ::nlevelmax_part
  real(dp)                 ::aexp_ini=10.			  real(dp)                 ::aexp_ini=10.
  real(dp),dimension(1:MAXLEVEL)::dfact=1.0d0,astart		  real(dp),dimension(1:MAXLEVEL)::dfact=1.0d0,astart
  real(dp),dimension(1:MAXLEVEL)::vfact				  real(dp),dimension(1:MAXLEVEL)::vfact
  real(dp),dimension(1:MAXLEVEL)::xoff1,xoff2,xoff3,dxini	  real(dp),dimension(1:MAXLEVEL)::xoff1,xoff2,xoff3,dxini
  integer ,dimension(1:MAXLEVEL)::n1,n2,n3			  integer ,dimension(1:MAXLEVEL)::n1,n2,n3

  ! Level related arrays					  ! Level related arrays
  real(dp),dimension(1:MAXLEVEL)::dtold,dtnew ! Time step at 	  real(dp),dimension(1:MAXLEVEL)::dtold,dtnew ! Time step at 
  real(dp),dimension(1:MAXLEVEL)::rho_max     ! Maximum densi	  real(dp),dimension(1:MAXLEVEL)::rho_max     ! Maximum densi
  integer ,dimension(1:MAXLEVEL)::nsubcycle=2 ! Subcycling at	  integer ,dimension(1:MAXLEVEL)::nsubcycle=2 ! Subcycling at

  ! Pointers for each level linked list				  ! Pointers for each level linked list
  integer,allocatable,dimension(:,:)::headl			  integer,allocatable,dimension(:,:)::headl
  integer,allocatable,dimension(:,:)::taill			  integer,allocatable,dimension(:,:)::taill
  integer,allocatable,dimension(:,:)::numbl			  integer,allocatable,dimension(:,:)::numbl
  integer,allocatable,dimension(:,:)::numbtot			  integer,allocatable,dimension(:,:)::numbtot

  ! Pointers for each level boundary linked list		  ! Pointers for each level boundary linked list
  integer,allocatable,dimension(:,:)::headb			  integer,allocatable,dimension(:,:)::headb
  integer,allocatable,dimension(:,:)::tailb			  integer,allocatable,dimension(:,:)::tailb
  integer,allocatable,dimension(:,:)::numbb			  integer,allocatable,dimension(:,:)::numbb

  ! Pointers for free memory grid linked list			  ! Pointers for free memory grid linked list
  integer::headf,tailf,numbf,used_mem,used_mem_tot		  integer::headf,tailf,numbf,used_mem,used_mem_tot

  ! Tree arrays							  ! Tree arrays
  real(dp),allocatable,dimension(:,:)::xg      ! grids positi	  real(dp),allocatable,dimension(:,:)::xg      ! grids positi
  integer ,allocatable,dimension(:,:)::nbor    ! neighboring 	  integer ,allocatable,dimension(:,:)::nbor    ! neighboring 
  integer ,allocatable,dimension(:)  ::father  ! father cell	  integer ,allocatable,dimension(:)  ::father  ! father cell
  integer ,allocatable,dimension(:)  ::next    ! next grid in	  integer ,allocatable,dimension(:)  ::next    ! next grid in
  integer ,allocatable,dimension(:)  ::prev    ! previous gri	  integer ,allocatable,dimension(:)  ::prev    ! previous gri
  integer ,allocatable,dimension(:)  ::son     ! sons grids	  integer ,allocatable,dimension(:)  ::son     ! sons grids
  integer ,allocatable,dimension(:)  ::flag1   ! flag for ref	  integer ,allocatable,dimension(:)  ::flag1   ! flag for ref
  integer ,allocatable,dimension(:)  ::flag2   ! flag for exp	  integer ,allocatable,dimension(:)  ::flag2   ! flag for exp

  ! Global indexing						  ! Global indexing
  integer ,allocatable,dimension(:)  ::cpu_map  ! domain deco	  integer ,allocatable,dimension(:)  ::cpu_map  ! domain deco
  integer ,allocatable,dimension(:)  ::cpu_map2 ! new domain 	  integer ,allocatable,dimension(:)  ::cpu_map2 ! new domain 

  ! Hilbert key							  ! Hilbert key
  real(qdp),allocatable,dimension(:)::hilbert_key		  real(qdp),allocatable,dimension(:)::hilbert_key
  real(qdp),allocatable,dimension(:)::bound_key,bound_key2	  real(qdp),allocatable,dimension(:)::bound_key,bound_key2
  real(qdp)                         ::order_all_min,order_all	  real(qdp)                         ::order_all_min,order_all

  ! Recursive bisection                                      	  ! Recursive bisection                                      
  real(dp),allocatable,dimension(:)    ::bisec_wall         !	  real(dp),allocatable,dimension(:)    ::bisec_wall         !
  integer ,allocatable,dimension(:,:)  ::bisec_next         !	  integer ,allocatable,dimension(:,:)  ::bisec_next         !
  integer::bisec_root                                       !	  integer::bisec_root                                       !

  integer,allocatable,dimension(:)     ::bisec_indx         !	  integer,allocatable,dimension(:)     ::bisec_indx         !
  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_min   !	  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_min   !
  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_max	  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_max
  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_min2  !	  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_min2  !
  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_max2	  real(dp),allocatable,dimension(:,:)  ::bisec_cpubox_max2

  integer,allocatable,dimension(:)     ::bisec_cpu_load     !	  integer,allocatable,dimension(:)     ::bisec_cpu_load     !
  integer,allocatable,dimension(:,:)   ::bisec_hist         !	  integer,allocatable,dimension(:,:)   ::bisec_hist         !
  integer,allocatable,dimension(:)     ::bisec_hist_bounds  !	  integer,allocatable,dimension(:)     ::bisec_hist_bounds  !
  integer,allocatable,dimension(:)     ::new_hist_bounds	  integer,allocatable,dimension(:)     ::new_hist_bounds
  integer,allocatable,dimension(:)     ::bisec_ind_cell     !	  integer,allocatable,dimension(:)     ::bisec_ind_cell     !
  integer,allocatable,dimension(:)     ::cell_level         !	  integer,allocatable,dimension(:)     ::cell_level         !

  real(dp)::bisec_res                                       !	  real(dp)::bisec_res                                       !
  integer ::bisec_nres						  integer ::bisec_nres

  ! Communication structure					  ! Communication structure
  type communicator						  type communicator
     integer                            ::ngrid			     integer                            ::ngrid
     integer                            ::npart			     integer                            ::npart
     integer     ,dimension(:)  ,pointer::igrid			     integer     ,dimension(:)  ,pointer::igrid
     integer     ,dimension(:,:),pointer::f			     integer     ,dimension(:,:),pointer::f
     real(kind=8),dimension(:,:),pointer::u			     real(kind=8),dimension(:,:),pointer::u
     integer     ,dimension(:,:),pointer::fp			     integer     ,dimension(:,:),pointer::fp
     real(kind=8),dimension(:,:),pointer::up			     real(kind=8),dimension(:,:),pointer::up
#ifdef ATON							#ifdef ATON
     real(kind=8),dimension(:,:),pointer::u_radiation		     real(kind=8),dimension(:,:),pointer::u_radiation
#endif								#endif
  end type communicator						  end type communicator

  ! Active grid, emission and reception communicators		  ! Active grid, emission and reception communicators
  type(communicator),allocatable,dimension(:)  ::active		  type(communicator),allocatable,dimension(:)  ::active
  type(communicator),allocatable,dimension(:,:)::boundary	  type(communicator),allocatable,dimension(:,:)::boundary
  type(communicator),allocatable,dimension(:,:)::emission	  type(communicator),allocatable,dimension(:,:)::emission
  type(communicator),allocatable,dimension(:,:)::reception	  type(communicator),allocatable,dimension(:,:)::reception

  ! Types for physical boundary conditions			  ! Types for physical boundary conditions
  CHARACTER(LEN=20)::type_hydro  ='hydro'			  CHARACTER(LEN=20)::type_hydro  ='hydro'
  CHARACTER(LEN=20)::type_accel  ='accel'			  CHARACTER(LEN=20)::type_accel  ='accel'
  CHARACTER(LEN=20)::type_flag   ='flag'			  CHARACTER(LEN=20)::type_flag   ='flag'

  ! Units specified by the user in the UNITS_PARAMS namelist 	  ! Units specified by the user in the UNITS_PARAMS namelist 
  ! These values shouldn't be used directly. Instead call uni	  ! These values shouldn't be used directly. Instead call uni
  real(dp)::units_density=1.0  ! [g/cm^3]			  real(dp)::units_density=1.0  ! [g/cm^3]
  real(dp)::units_time=1.0     ! [seconds]			  real(dp)::units_time=1.0     ! [seconds]
  real(dp)::units_length=1.0   ! [cm]				  real(dp)::units_length=1.0   ! [cm]

end module amr_commons						end module amr_commons

